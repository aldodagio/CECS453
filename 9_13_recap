- Composable function defines the logic for creating the UI
- Preview annotation lets you run design without running emulator
- there are custom and predefined Themes (HappyBirthdayTheme)
09/13/2023:
- if you see a function call starting with prefix 'on' (for example, onValueChanged), then that is a give away that that function is an event handler.
- changing orientation on your phone from portrait to landscape will reset your data
- you can allow user to change orientation or not
- if you allow it then make sure you use view model (we haven't really talked about it yet)
- you can create image by yourself in android using vector
- leadingIcon for text fields
Lab Assignment #1:
- have video link for prof
- pdf file with coding
- zip file of project
- individual file from each team member needs to name their file based on their name so it can be uniquely identified by prof
Lab Assignment #2:
- Digital Art Space
- does not have to be elegant
- just make it dry, but make sure functionality works is the important part for this class
- next week, 9/20/2023 is initial due date
09/20/2023:
Topic: Scrollable List
- Affirmation List
- You can define a class and a constuctor at the same time
- creating a list, you should probably implement data and model folder
- two common layout ; scrollable list and grid
Lab Assignment 2:
- hard for him to grade - because he has to unzip everything for the group
- each member write comment on submission, the team member and team number
- each member submits
Code Lab 7:
- using collections in Kotlin
Code Lab 9:
- building a grid
Screen Density:
- launcher icon - we dont know screen density (how many pixel per inch) or device model
Adaptive Icons:
- Foreground and Background layers
- quiz #2 on monday
10/11/2023:
Introduction to Navigation:
- Navigation Controller
- passing data from one page to another
- Navigation Arguments can be passed to a navigation destination by including argument placeholders within the route
- NavHost(navController = navController, startDestination = "home")
- arguments = listOf(navArgument("mealId") {type = NavType.StringType}) // Declaring an argument of StringType
- backStackEntry -> MealDetailsScreen(mealId = backStackEntry.arguments?.getString("mealId"))
- Finally, you would retrieve the argument from the NavBackstackEntry that is available within the content parameter of Composable
- Creating Routes: create a file with the name Routes. Add the following code. It will contain the route names of all screens.
- Code: sealed class Routes (val route: String) { object Home : Routes("home") object Profile : Routes("profile") object Settings : Routes("setting") }
- Button(onClick = { navController.naviate(Routes.Profile.route) } )
- Button(onClick = { navController.naviate(Routes.Settings.route + "/$counter") } ) // passing argument counter to Settings page
- its recommended to create all other dependent screens before creating the MainActivity.kt
- do codelab 13 for the topics discussed
- monday returns the exam
- wednesday quiz on ViewModel
10/25/2023:
- DAO?
- update, insert, delete all supported without query
- everything else will need query
- InventoryDatabase.kt is created with an abstract class and is defined using @Database annotation
- an abstract class requires at least one abstract method
- companiion object?
- companion object keeps an instance variable which keeps a reference to the database (singleton pattern)
- @volatile annotation ensures the db reference (Instance) is never cached and up to date and avaialble to all threads 
- race condition? threading?
- synchronized can be done at method or class level 
- the synchronized block of code means only one thread of execution at a time can enter this block of code
- repository pattern
- REturn FLOW ? What is flow? 
- november 15 exam, quiz on wednesday
11/8/2023:
- data folder containing everything related to data like container and repository and dao
- then you have a home folder item folder navigation folder
- dependency injection?
